{"mappings":"+BAIO,SAASA,aAAaC,EAA6BC,GACxD,MAAOC,EAAWC,GAAgBC,EAAMC,SAAoB,QACrDC,EAAeC,GAAoBH,EAAMC,WAC1CG,EAASJ,EAAMK,OAAe,GA0BpC,OAxBAL,EAAMM,WAAU,KAKd,QAAsBC,IAAlBV,GAAAA,MAA+BD,GAAAA,EAASY,cAAe,CACzD,MAAMN,EAAgBO,iBAAiBb,EAAQY,eAC/CL,EAAiBD,MAElB,CAACN,EAASC,IAEbG,EAAMM,WAAU,UASQC,IAAlBV,GARJ,SAASa,IACPN,EAAOO,QAAUC,uBAAsB,KACrC,MAAMC,EAAMX,MAAAA,OAAH,EAAGA,EAAeJ,UACvBe,GAAKd,EAAac,GACtBH,OAI6BA,GAC1B,IAAMI,qBAAqBV,EAAOO,WACxC,CAACT,EAAeL,EAAeE,IAE3BF,GAAiBC","sources":["./packages/react/use-direction/src/useDirection.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\n\nexport function useDirection(element: HTMLElement | null, directionProp?: Direction) {\n  const [direction, setDirection] = React.useState<Direction>('ltr');\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const rAFRef = React.useRef<number>(0);\n\n  React.useEffect(() => {\n    // We check inherited direction of the parent instead of the `element` itself.\n    // This is because we internally set the computed `dir` on the element so wouldn't be\n    // able to react to changes to the inherited direction. The `dir` attribute we set should\n    // always sync with the direction prop OR its inherited direction.\n    if (directionProp === undefined && element?.parentElement) {\n      const computedStyle = getComputedStyle(element.parentElement);\n      setComputedStyle(computedStyle);\n    }\n  }, [element, directionProp]);\n\n  React.useEffect(() => {\n    function getDirection() {\n      rAFRef.current = requestAnimationFrame(() => {\n        const dir = computedStyle?.direction as Direction | '' | undefined;\n        if (dir) setDirection(dir);\n        getDirection();\n      });\n    }\n\n    if (directionProp === undefined) getDirection();\n    return () => cancelAnimationFrame(rAFRef.current);\n  }, [computedStyle, directionProp, setDirection]);\n\n  return directionProp || direction;\n}\n"],"names":["useDirection","element","directionProp","direction","setDirection","React","useState","computedStyle","setComputedStyle","rAFRef","useRef","useEffect","undefined","parentElement","getComputedStyle","getDirection","current","requestAnimationFrame","dir","cancelAnimationFrame"],"version":3,"file":"index.module.js.map"}