{
  "version": 3,
  "sources": ["../../overlayscrollbars/js/OverlayScrollbars.js", "../../overlayscrollbars-react/src/OverlayScrollbarsComponent.tsx"],
  "sourcesContent": ["/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.3\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 20.07.2022\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright \u00C2\u00A9 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n\t\t\t\t\tif (!_destroyed) {\r\n\t\t\t\t\t\tvar target = event.target;\r\n\t\t\t\t\t\tvar elm = FRAMEWORK(event.target);\r\n\t\t\t\t\t\tvar index = FRAMEWORK.inArray(target, _updateOnLoadElms);\r\n\t\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t\t_updateOnLoadElms.splice(index, 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\teachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n\t\t\t\t\t\t\tif (elm.is(updateOnLoadSelector)) {\r\n\t\t\t\t\t\t\t\tupdate({ _contentSizeChanged: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        _initialized = true; // workaround so the onInitializationWithdrawn callback below is fired\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _initialized = false;\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));", "import React, { Component, RefObject } from 'react';\nimport OverlayScrollbars from \"overlayscrollbars\";\n\nexport interface OverlayScrollbarsComponentProps extends React.HTMLAttributes<HTMLDivElement> {\n    children?: any;\n    options?: OverlayScrollbars.Options;\n    extensions?: OverlayScrollbars.Extensions;\n}\nexport interface OverlayScrollbarsComponentState { }\n\nexport class OverlayScrollbarsComponent extends Component<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentState> {\n    private _osInstance: OverlayScrollbars | null = null;\n    private _osTargetRef: RefObject<HTMLDivElement>;\n\n    constructor(props: OverlayScrollbarsComponentProps) {\n        super(props);\n        this._osTargetRef = React.createRef();\n    }\n\n    osInstance(): OverlayScrollbars | null {\n        return this._osInstance;\n    }\n\n    osTarget(): HTMLDivElement | null {\n        return this._osTargetRef.current || null;\n    }\n\n    componentDidMount() {\n        this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n        mergeHostClassNames(this._osInstance, this.props.className);\n    }\n\n    componentWillUnmount() {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.destroy();\n            this._osInstance = null;\n        }\n    }\n\n    componentDidUpdate(prevProps: OverlayScrollbarsComponentProps) {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.options(this.props.options);\n\n            if (prevProps.className !== this.props.className) {\n                mergeHostClassNames(this._osInstance, this.props.className);\n            }\n        }\n    }\n\n    render() {\n        const {\n            options,\n            extensions,\n            children,\n            className,\n            ...divProps\n        } = this.props;\n\n        return (\n            <div className=\"os-host\" {...divProps} ref={this._osTargetRef}>\n                <div className=\"os-resize-observer-host\"></div>\n                <div className=\"os-padding\">\n                    <div className=\"os-viewport\">\n                        <div className=\"os-content\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-horizontal \">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-vertical\">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar-corner\"></div>\n            </div>\n        );\n    }\n}\n\nfunction mergeHostClassNames(osInstance: OverlayScrollbars, className: string) {\n    if (OverlayScrollbars.valid(osInstance)) {\n        const { host } = osInstance.getElements();\n        const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n        const osClassNames = host.className.split(' ')\n            .filter(name => name.match(regex))\n            .join(' ');\n\n        host.className = `${osClassNames} ${className || ''}`;\n    }\n}"],
  "mappings": "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",
  "names": ["window", "undefined", "length", "template", "validatedOptions", "validatedOptionsPrepared", "msie", "remove", "index", "i", "scrollRatio", "coordinates", "obj", "options", "extensions", "React", "OverlayScrollbars"]
}
