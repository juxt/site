{"version":3,"file":"tiptap-extension-typography.umd.js","sources":["../src/typography.ts"],"sourcesContent":["import { Extension, textInputRule } from '@tiptap/core'\n\nexport interface TypographyOptions {\n  emDash: false,\n  ellipsis: false,\n  openDoubleQuote: false,\n  closeDoubleQuote: false,\n  openSingleQuote: false,\n  closeSingleQuote: false,\n  leftArrow: false,\n  rightArrow: false,\n  copyright: false,\n  trademark: false,\n  registeredTrademark: false,\n  oneHalf: false,\n  plusMinus: false,\n  notEqual: false,\n  laquo: false,\n  raquo: false,\n  multiplication: false,\n  superscriptTwo: false,\n  superscriptThree: false,\n  oneQuarter: false,\n  threeQuarters: false,\n}\n\nexport const emDash = textInputRule({\n  find: /--$/,\n  replace: '—',\n})\n\nexport const ellipsis = textInputRule({\n  find: /\\.\\.\\.$/,\n  replace: '…',\n})\n\nexport const openDoubleQuote = textInputRule({\n  find: /(?:^|[\\s{[(<'\"\\u2018\\u201C])(\")$/,\n  replace: '“',\n})\n\nexport const closeDoubleQuote = textInputRule({\n  find: /\"$/,\n  replace: '”',\n})\n\nexport const openSingleQuote = textInputRule({\n  find: /(?:^|[\\s{[(<'\"\\u2018\\u201C])(')$/,\n  replace: '‘',\n})\n\nexport const closeSingleQuote = textInputRule({\n  find: /'$/,\n  replace: '’',\n})\n\nexport const leftArrow = textInputRule({\n  find: /<-$/,\n  replace: '←',\n})\n\nexport const rightArrow = textInputRule({\n  find: /->$/,\n  replace: '→',\n})\n\nexport const copyright = textInputRule({\n  find: /\\(c\\)$/,\n  replace: '©',\n})\n\nexport const trademark = textInputRule({\n  find: /\\(tm\\)$/,\n  replace: '™',\n})\n\nexport const registeredTrademark = textInputRule({\n  find: /\\(r\\)$/,\n  replace: '®',\n})\n\nexport const oneHalf = textInputRule({\n  find: /1\\/2$/,\n  replace: '½',\n})\n\nexport const plusMinus = textInputRule({\n  find: /\\+\\/-$/,\n  replace: '±',\n})\n\nexport const notEqual = textInputRule({\n  find: /!=$/,\n  replace: '≠',\n})\n\nexport const laquo = textInputRule({\n  find: /<<$/,\n  replace: '«',\n})\n\nexport const raquo = textInputRule({\n  find: />>$/,\n  replace: '»',\n})\n\nexport const multiplication = textInputRule({\n  find: /\\d+\\s?([*x])\\s?\\d+$/,\n  replace: '×',\n})\n\nexport const superscriptTwo = textInputRule({\n  find: /\\^2$/,\n  replace: '²',\n})\n\nexport const superscriptThree = textInputRule({\n  find: /\\^3$/,\n  replace: '³',\n})\n\nexport const oneQuarter = textInputRule({\n  find: /1\\/4$/,\n  replace: '¼',\n})\n\nexport const threeQuarters = textInputRule({\n  find: /3\\/4$/,\n  replace: '¾',\n})\n\nexport const Typography = Extension.create<TypographyOptions>({\n  name: 'typography',\n\n  addInputRules() {\n    const rules = []\n\n    if (this.options.emDash !== false) {\n      rules.push(emDash)\n    }\n\n    if (this.options.ellipsis !== false) {\n      rules.push(ellipsis)\n    }\n\n    if (this.options.openDoubleQuote !== false) {\n      rules.push(openDoubleQuote)\n    }\n\n    if (this.options.closeDoubleQuote !== false) {\n      rules.push(closeDoubleQuote)\n    }\n\n    if (this.options.openSingleQuote !== false) {\n      rules.push(openSingleQuote)\n    }\n\n    if (this.options.closeSingleQuote !== false) {\n      rules.push(closeSingleQuote)\n    }\n\n    if (this.options.leftArrow !== false) {\n      rules.push(leftArrow)\n    }\n\n    if (this.options.rightArrow !== false) {\n      rules.push(rightArrow)\n    }\n\n    if (this.options.copyright !== false) {\n      rules.push(copyright)\n    }\n\n    if (this.options.trademark !== false) {\n      rules.push(trademark)\n    }\n\n    if (this.options.registeredTrademark !== false) {\n      rules.push(registeredTrademark)\n    }\n\n    if (this.options.oneHalf !== false) {\n      rules.push(oneHalf)\n    }\n\n    if (this.options.plusMinus !== false) {\n      rules.push(plusMinus)\n    }\n\n    if (this.options.notEqual !== false) {\n      rules.push(notEqual)\n    }\n\n    if (this.options.laquo !== false) {\n      rules.push(laquo)\n    }\n\n    if (this.options.raquo !== false) {\n      rules.push(raquo)\n    }\n\n    if (this.options.multiplication !== false) {\n      rules.push(multiplication)\n    }\n\n    if (this.options.superscriptTwo !== false) {\n      rules.push(superscriptTwo)\n    }\n\n    if (this.options.superscriptThree !== false) {\n      rules.push(superscriptThree)\n    }\n\n    if (this.options.oneQuarter !== false) {\n      rules.push(oneQuarter)\n    }\n\n    if (this.options.threeQuarters !== false) {\n      rules.push(threeQuarters)\n    }\n\n    return rules\n  },\n})\n"],"names":["textInputRule","Extension"],"mappings":"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"}