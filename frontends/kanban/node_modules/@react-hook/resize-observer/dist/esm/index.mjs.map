{"version":3,"file":"index.mjs","sources":["../../src/index.tsx"],"sourcesContent":["/* eslint-disable no-return-assign */\n/* eslint-disable no-underscore-dangle */\nimport * as React from 'react'\nimport {\n  ResizeObserver as Polyfill,\n  ResizeObserverEntry,\n} from '@juggle/resize-observer'\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\nimport useLatest from '@react-hook/latest'\n\nconst ResizeObserver =\n  typeof window !== 'undefined' && 'ResizeObserver' in window\n    ? // @ts-ignore\n      window.ResizeObserver\n    : Polyfill\n\n/**\n * A React hook that fires a callback whenever ResizeObserver detects a change to its size\n *\n * @param target A React ref created by `useRef()` or an HTML element\n * @param callback Invoked with a single `ResizeObserverEntry` any time\n *   the `target` resizes\n */\nfunction useResizeObserver<T extends HTMLElement>(\n  target: React.RefObject<T> | T | null,\n  callback: UseResizeObserverCallback\n): Polyfill {\n  const resizeObserver = getResizeObserver()\n  const storedCallback = useLatest(callback)\n\n  useLayoutEffect(() => {\n    let didUnsubscribe = false\n    const targetEl = target && 'current' in target ? target.current : target\n    if (!targetEl) return () => {}\n\n    function cb(entry: ResizeObserverEntry, observer: Polyfill) {\n      if (didUnsubscribe) return\n      storedCallback.current(entry, observer)\n    }\n\n    resizeObserver.subscribe(targetEl as HTMLElement, cb)\n\n    return () => {\n      didUnsubscribe = true\n      resizeObserver.unsubscribe(targetEl as HTMLElement, cb)\n    }\n  }, [target, resizeObserver, storedCallback])\n\n  return resizeObserver.observer\n}\n\nfunction createResizeObserver() {\n  let ticking = false\n  let allEntries: ResizeObserverEntry[] = []\n\n  const callbacks: Map<any, Array<UseResizeObserverCallback>> = new Map()\n\n  const observer = new ResizeObserver(\n    (entries: ResizeObserverEntry[], obs: Polyfill) => {\n      allEntries = allEntries.concat(entries)\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          const triggered = new Set<Element>()\n          for (let i = 0; i < allEntries.length; i++) {\n            if (triggered.has(allEntries[i].target)) continue\n            triggered.add(allEntries[i].target)\n            const cbs = callbacks.get(allEntries[i].target)\n            cbs?.forEach((cb) => cb(allEntries[i], obs))\n          }\n          allEntries = []\n          ticking = false\n        })\n      }\n      ticking = true\n    }\n  )\n\n  return {\n    observer,\n    subscribe(target: HTMLElement, callback: UseResizeObserverCallback) {\n      observer.observe(target)\n      const cbs = callbacks.get(target) ?? []\n      cbs.push(callback)\n      callbacks.set(target, cbs)\n    },\n    unsubscribe(target: HTMLElement, callback: UseResizeObserverCallback) {\n      const cbs = callbacks.get(target) ?? []\n      if (cbs.length === 1) {\n        observer.unobserve(target)\n        callbacks.delete(target)\n        return\n      }\n      const cbIndex = cbs.indexOf(callback)\n      if (cbIndex !== -1) cbs.splice(cbIndex, 1)\n      callbacks.set(target, cbs)\n    },\n  }\n}\n\nlet _resizeObserver: ReturnType<typeof createResizeObserver>\n\nconst getResizeObserver = () =>\n  !_resizeObserver\n    ? (_resizeObserver = createResizeObserver())\n    : _resizeObserver\n\nexport type UseResizeObserverCallback = (\n  entry: ResizeObserverEntry,\n  observer: Polyfill\n) => any\n\nexport default useResizeObserver\n"],"names":["_resizeObserver","ResizeObserver","window","Polyfill","target","callback","ticking","allEntries","callbacks","observer","resizeObserver","Map","entries","obs","concat","requestAnimationFrame","triggered","Set","i","has","add","cbs","get","forEach","cb","length","subscribe","observe","push","set","unsubscribe","unobserve","delete","cbIndex","indexOf","splice","storedCallback","useLatest","useLayoutEffect","entry","didUnsubscribe","current","targetEl"],"mappings":"AAiC0B,0JAvB1B,IAyFIA,EAzFEC,EACc,oBAAXC,QAA0B,mBAAoBA,OAEjDA,OAAOD,eACPE,iBASN,SACEC,EACAC,OA2BIC,EACAC,EAEEC,EAEAC,EA9BAC,EA2ELV,IAlDGM,EAAU,EACVC,EAAoC,GAElCC,EAAwD,IAAIG,IAE5DF,EAAW,IAAIR,EACnB,CAACW,EAAgCC,KAC/BN,EAAaA,EAAWO,OAAOF,GAC1BN,GACHJ,OAAOa,0CACCC,EAAY,IAAIC,eACbC,MACHF,EAAUG,IAAIZ,EAAWW,GAAGd,QAAS,iBACzCY,EAAUI,IAAIb,EAAWW,GAAGd,YACtBiB,EAAMb,EAAUc,IAAIf,EAAWW,GAAGd,QACxCiB,MAAAA,GAAAA,EAAKE,QAASC,GAAOA,EAAGjB,EAAWW,GAAIL,KAJhCK,EAAI,EAAGA,EAAIX,EAAWkB,OAAQP,MAA9BA,GAMTX,EAAa,GACbD,EAAU,KAGdA,EAAU,IA8BTN,EA1BE,CACLS,SAAAA,EACAiB,UAAUtB,EAAqBC,SAC7BI,EAASkB,QAAQvB,OACXiB,YAAMb,EAAUc,IAAIlB,kBAAW,GACrCiB,EAAIO,KAAKvB,GACTG,EAAUqB,IAAIzB,EAAQiB,IAExBS,YAAY1B,EAAqBC,SACzBgB,YAAMb,EAAUc,IAAIlB,kBAAW,MAClB,IAAfiB,EAAII,cACNhB,EAASsB,UAAU3B,QACnBI,EAAUwB,OAAO5B,OAGb6B,EAAUZ,EAAIa,QAAQ7B,IACX,IAAb4B,GAAgBZ,EAAIc,OAAOF,EAAS,GACxCzB,EAAUqB,IAAIzB,EAAQiB,MAlEpBe,EAAiBC,EAAUhC,UAEjCiC,EAAgB,cAKLd,EAAGe,EAA4B9B,GAClC+B,GACJJ,EAAeK,QAAQF,EAAO9B,OAN5B+B,EAAiB,EACfE,EAAWtC,GAAU,YAAaA,EAASA,EAAOqC,QAAUrC,SAC7DsC,GAOLhC,EAAegB,UAAUgB,EAAyBlB,GAE3C,KACLgB,EAAiB,EACjB9B,EAAeoB,YAAYY,EAAyBlB,QAErD,CAACpB,EAAQM,EAAgB0B,IAErB1B,EAAeD"}