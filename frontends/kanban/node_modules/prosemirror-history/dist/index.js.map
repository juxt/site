{"version":3,"file":"index.js","sources":["../src/history.js"],"sourcesContent":["import RopeSequence from \"rope-sequence\"\nimport {Mapping} from \"prosemirror-transform\"\nimport {Plugin, PluginKey} from \"prosemirror-state\"\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n\n// Used to schedule history compression\nconst max_empty_items = 500\n\nclass Branch {\n  constructor(items, eventCount) {\n    this.items = items\n    this.eventCount = eventCount\n  }\n\n  // : (EditorState, bool) → ?{transform: Transform, selection: ?SelectionBookmark, remaining: Branch}\n  // Pop the latest event off the branch's history and apply it\n  // to a document transform.\n  popEvent(state, preserveItems) {\n    if (this.eventCount == 0) return null\n\n    let end = this.items.length\n    for (;; end--) {\n      let next = this.items.get(end - 1)\n      if (next.selection) { --end; break }\n    }\n\n    let remap, mapFrom\n    if (preserveItems) {\n      remap = this.remapping(end, this.items.length)\n      mapFrom = remap.maps.length\n    }\n    let transform = state.tr\n    let selection, remaining\n    let addAfter = [], addBefore = []\n\n    this.items.forEach((item, i) => {\n      if (!item.step) {\n        if (!remap) {\n          remap = this.remapping(end, i + 1)\n          mapFrom = remap.maps.length\n        }\n        mapFrom--\n        addBefore.push(item)\n        return\n      }\n\n      if (remap) {\n        addBefore.push(new Item(item.map))\n        let step = item.step.map(remap.slice(mapFrom)), map\n\n        if (step && transform.maybeStep(step).doc) {\n          map = transform.mapping.maps[transform.mapping.maps.length - 1]\n          addAfter.push(new Item(map, null, null, addAfter.length + addBefore.length))\n        }\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n      } else {\n        transform.maybeStep(item.step)\n      }\n\n      if (item.selection) {\n        selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection\n        remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1)\n        return false\n      }\n    }, this.items.length, 0)\n\n    return {remaining, transform, selection}\n  }\n\n  // : (Transform, ?SelectionBookmark, Object) → Branch\n  // Create a new branch with the given transform added.\n  addTransform(transform, selection, histOptions, preserveItems) {\n    let newItems = [], eventCount = this.eventCount\n    let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null\n\n    for (let i = 0; i < transform.steps.length; i++) {\n      let step = transform.steps[i].invert(transform.docs[i])\n      let item = new Item(transform.mapping.maps[i], step, selection), merged\n      if (merged = lastItem && lastItem.merge(item)) {\n        item = merged\n        if (i) newItems.pop()\n        else oldItems = oldItems.slice(0, oldItems.length - 1)\n      }\n      newItems.push(item)\n      if (selection) {\n        eventCount++\n        selection = null\n      }\n      if (!preserveItems) lastItem = item\n    }\n    let overflow = eventCount - histOptions.depth\n    if (overflow > DEPTH_OVERFLOW) {\n      oldItems = cutOffEvents(oldItems, overflow)\n      eventCount -= overflow\n    }\n    return new Branch(oldItems.append(newItems), eventCount)\n  }\n\n  remapping(from, to) {\n    let maps = new Mapping\n    this.items.forEach((item, i) => {\n      let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n          ? maps.maps.length - item.mirrorOffset : null\n      maps.appendMap(item.map, mirrorPos)\n    }, from, to)\n    return maps\n  }\n\n  addMaps(array) {\n    if (this.eventCount == 0) return this\n    return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount)\n  }\n\n  // : (Transform, number)\n  // When the collab module receives remote changes, the history has\n  // to know about those, so that it can adjust the steps that were\n  // rebased on top of the remote changes, and include the position\n  // maps for the remote changes in its array of items.\n  rebased(rebasedTransform, rebasedCount) {\n    if (!this.eventCount) return this\n\n    let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount)\n\n    let mapping = rebasedTransform.mapping\n    let newUntil = rebasedTransform.steps.length\n    let eventCount = this.eventCount\n    this.items.forEach(item => { if (item.selection) eventCount-- }, start)\n\n    let iRebased = rebasedCount\n    this.items.forEach(item => {\n      let pos = mapping.getMirror(--iRebased)\n      if (pos == null) return\n      newUntil = Math.min(newUntil, pos)\n      let map = mapping.maps[pos]\n      if (item.step) {\n        let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos])\n        let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos))\n        if (selection) eventCount++\n        rebasedItems.push(new Item(map, step, selection))\n      } else {\n        rebasedItems.push(new Item(map))\n      }\n    }, start)\n\n    let newMaps = []\n    for (let i = rebasedCount; i < newUntil; i++)\n      newMaps.push(new Item(mapping.maps[i]))\n    let items = this.items.slice(0, start).append(newMaps).append(rebasedItems)\n    let branch = new Branch(items, eventCount)\n\n    if (branch.emptyItemCount() > max_empty_items)\n      branch = branch.compress(this.items.length - rebasedItems.length)\n    return branch\n  }\n\n  emptyItemCount() {\n    let count = 0\n    this.items.forEach(item => { if (!item.step) count++ })\n    return count\n  }\n\n  // Compressing a branch means rewriting it to push the air (map-only\n  // items) out. During collaboration, these naturally accumulate\n  // because each remote change adds one. The `upto` argument is used\n  // to ensure that only the items below a given level are compressed,\n  // because `rebased` relies on a clean, untouched set of items in\n  // order to associate old items with rebased steps.\n  compress(upto = this.items.length) {\n    let remap = this.remapping(0, upto), mapFrom = remap.maps.length\n    let items = [], events = 0\n    this.items.forEach((item, i) => {\n      if (i >= upto) {\n        items.push(item)\n        if (item.selection) events++\n      } else if (item.step) {\n        let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap()\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n        if (step) {\n          let selection = item.selection && item.selection.map(remap.slice(mapFrom))\n          if (selection) events++\n          let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1\n          if (merged = items.length && items[last].merge(newItem))\n            items[last] = merged\n          else\n            items.push(newItem)\n        }\n      } else if (item.map) {\n        mapFrom--\n      }\n    }, this.items.length, 0)\n    return new Branch(RopeSequence.from(items.reverse()), events)\n  }\n}\n\nBranch.empty = new Branch(RopeSequence.empty, 0)\n\nfunction cutOffEvents(items, n) {\n  let cutPoint\n  items.forEach((item, i) => {\n    if (item.selection && (n-- == 0)) {\n      cutPoint = i\n      return false\n    }\n  })\n  return items.slice(cutPoint)\n}\n\nclass Item {\n  constructor(map, step, selection, mirrorOffset) {\n    // The (forward) step map for this item.\n    this.map = map\n    // The inverted step\n    this.step = step\n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    this.selection = selection\n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    this.mirrorOffset = mirrorOffset\n  }\n\n  merge(other) {\n    if (this.step && other.step && !other.selection) {\n      let step = other.step.merge(this.step)\n      if (step) return new Item(step.getMap().invert(), step, this.selection)\n    }\n  }\n}\n\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nexport class HistoryState {\n  constructor(done, undone, prevRanges, prevTime) {\n    this.done = done\n    this.undone = undone\n    this.prevRanges = prevRanges\n    this.prevTime = prevTime\n  }\n}\n\nconst DEPTH_OVERFLOW = 20\n\n// : (HistoryState, EditorState, Transaction, Object)\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  let historyTr = tr.getMeta(historyKey), rebased\n  if (historyTr) return historyTr.historyState\n\n  if (tr.getMeta(closeHistoryKey)) history = new HistoryState(history.done, history.undone, null, 0)\n\n  let appended = tr.getMeta(\"appendedTransaction\")\n\n  if (tr.steps.length == 0) {\n    return history\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo)\n      return new HistoryState(history.done.addTransform(tr, null, options, mustPreserveItems(state)),\n                              history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime)\n    else\n      return new HistoryState(history.done, history.undone.addTransform(tr, null, options, mustPreserveItems(state)),\n                              null, history.prevTime)\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    let newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n                                                          !isAdjacentTo(tr, history.prevRanges))\n    let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1])\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : null,\n                                                      options, mustPreserveItems(state)),\n                            Branch.empty, prevRanges, tr.time)\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased),\n                            history.undone.rebased(tr, rebased),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps),\n                            history.undone.addMaps(tr.mapping.maps),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  }\n}\n\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) return false\n  if (!transform.docChanged) return true\n  let adjacent = false\n  transform.mapping.maps[0].forEach((start, end) => {\n    for (let i = 0; i < prevRanges.length; i += 2)\n      if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n        adjacent = true\n  })\n  return adjacent\n}\n\nfunction rangesFor(map) {\n  let result = []\n  map.forEach((_from, _to, from, to) => result.push(from, to))\n  return result\n}\n\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) return null\n  let result = []\n  for (let i = 0; i < ranges.length; i += 2) {\n    let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1)\n    if (from <= to) result.push(from, to)\n  }\n  return result\n}\n\n// : (HistoryState, EditorState, (tr: Transaction), bool)\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  let preserveItems = mustPreserveItems(state), histOptions = historyKey.get(state).spec.config\n  let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems)\n  if (!pop) return\n\n  let selection = pop.selection.resolve(pop.transform.doc)\n  let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(),\n                                                                  histOptions, preserveItems)\n\n  let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0)\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {redo, historyState: newHist}).scrollIntoView())\n}\n\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  let plugins = state.plugins\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false\n    cachedPreserveItemsPlugins = plugins\n    for (let i = 0; i < plugins.length; i++) if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true\n      break\n    }\n  }\n  return cachedPreserveItems\n}\n\n// :: (Transaction) → Transaction\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nexport function closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true)\n}\n\nconst historyKey = new PluginKey(\"history\")\nconst closeHistoryKey = new PluginKey(\"closeHistory\")\n\n// :: (?Object) → Plugin\n// Returns a plugin that enables the undo history for an editor. The\n// plugin will track undo and redo stacks, which can be used with the\n// [`undo`](#history.undo) and [`redo`](#history.redo) commands.\n//\n// You can set an `\"addToHistory\"` [metadata\n// property](#state.Transaction.setMeta) of `false` on a transaction\n// to prevent it from being rolled back by undo.\n//\n//   config::-\n//   Supports the following configuration options:\n//\n//     depth:: ?number\n//     The amount of history events that are collected before the\n//     oldest events are discarded. Defaults to 100.\n//\n//     newGroupDelay:: ?number\n//     The delay between changes after which a new group should be\n//     started. Defaults to 500 (milliseconds). Note that when changes\n//     aren't adjacent, a new group is always started.\nexport function history(config) {\n  config = {depth: config && config.depth || 100,\n            newGroupDelay: config && config.newGroupDelay || 500}\n  return new Plugin({\n    key: historyKey,\n\n    state: {\n      init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0)\n      },\n      apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config)\n      }\n    },\n\n    config,\n\n    props: {\n      handleDOMEvents: {\n        beforeinput(view, e) {\n          let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null\n          if (!command) return false\n          e.preventDefault()\n          return command(view.state, view.dispatch)\n        }\n      }\n    }\n  })\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that undoes the last change, if any.\nexport function undo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.done.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, false)\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that redoes the last undone change, if any.\nexport function redo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.undone.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, true)\n  return true\n}\n\n// :: (EditorState) → number\n// The amount of undoable events available in a given state.\nexport function undoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.done.eventCount : 0\n}\n\n// :: (EditorState) → number\n// The amount of redoable events available in a given editor state.\nexport function redoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.undone.eventCount : 0\n}\n"],"names":["const","let","this","Mapping","RopeSequence","PluginKey","Plugin"],"mappings":";;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,IAAM,eAAe,GAAG,IAAG;AAC3B;AACA,IAAM,MAAM,GACV,SAAA,MAAW,CAAC,KAAK,EAAE,UAAU,EAAE;AACjC,EAAI,IAAI,CAAC,KAAK,GAAG,MAAK;AACtB,EAAI,IAAI,CAAC,UAAU,GAAG,WAAU;AAC9B,CAAC,CAAA;AACH;AACE;AACA;AACA;AACA,MAAA,CAAA,SAAA,CAAA,QAAA,GAAA,SAAA,QAAA,EAAS,KAAK,EAAE,aAAa,EAAE;;AAAC;AAClC,EAAI,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAA,EAAE,OAAO,IAAI,EAAA;AACzC;AACA,EAAIC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAM;AAC/B,EAAI,QAAQ,GAAG,EAAE,EAAE;AACnB,IAAMA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAC;AACxC,IAAM,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE;AAC1C,GAAK;AACL;AACA,EAAIA,IAAI,KAAK,EAAE,QAAO;AACtB,EAAI,IAAI,aAAa,EAAE;AACvB,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC;AACpD,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAM;AACjC,GAAK;AACL,EAAIA,IAAI,SAAS,GAAG,KAAK,CAAC,GAAE;AAC5B,EAAIA,IAAI,SAAS,EAAE,UAAS;AAC5B,EAAIA,IAAI,QAAQ,GAAG,EAAE,EAAE,SAAS,GAAG,GAAE;AACrC;AACA,EAAI,IAAI,CAAC,KAAK,CAAC,OAAO,WAAE,IAAI,EAAE,CAAC,EAAK;AACpC,IAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACtB,MAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,QAAU,KAAK,GAAGC,QAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAC;AAC5C,QAAU,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAM;AACrC,OAAS;AACT,MAAQ,OAAO,GAAE;AACjB,MAAQ,SAAS,CAAC,IAAI,CAAC,IAAI,EAAC;AAC5B,MAAQ,MAAM;AACd,KAAO;AACP;AACA,IAAM,IAAI,KAAK,EAAE;AACjB,MAAQ,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC;AAC1C,MAAQD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,IAAG;AAC3D;AACA,MAAQ,IAAI,IAAI,IAAI,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;AACnD,QAAU,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;AACzE,QAAU,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,EAAC;AACtF,OAAS;AACT,MAAQ,OAAO,GAAE;AACjB,MAAQ,IAAI,GAAG,EAAA,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,EAAC,EAAA;AAC9C,KAAO,MAAM;AACb,MAAQ,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAC;AACtC,KAAO;AACP;AACA,IAAM,IAAI,IAAI,CAAC,SAAS,EAAE;AAC1B,MAAQ,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,UAAS;AACrF,MAAQ,SAAS,GAAG,IAAI,MAAM,CAACC,QAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAEA,QAAI,CAAC,UAAU,GAAG,CAAC,EAAC;AAC1H,MAAQ,OAAO,KAAK;AACpB,KAAO;AACP,GAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAC;AAC5B;AACA,EAAI,OAAO,CAAC,SAAA,EAAA,SAAS,aAAE,SAAS,EAAA,SAAA,EAAE,SAAS,CAAC;AAC1C,CAAC,CAAA;AACH;AACE;AACA;iBACA,YAAY,GAAA,SAAA,YAAA,EAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE;AACjE,EAAID,IAAI,QAAQ,GAAG,EAAE,EAAE,UAAU,GAAG,IAAI,CAAC,WAAU;AACnD,EAAIA,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,GAAG,CAAC,aAAa,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAI;AACtH;AACA,EAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrD,IAAMA,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;AAC7D,IAAMA,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,MAAM,IAAA,KAAA,CAAA,EAAA;AAC7E,IAAM,IAAI,MAAM,GAAG,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACrD,MAAQ,IAAI,GAAG,OAAM;AACrB,MAAQ,IAAI,CAAC,EAAA,EAAE,QAAQ,CAAC,GAAG,GAAE,EAAA;AAC7B,WAAa,EAAA,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAC,EAAA;AAC9D,KAAO;AACP,IAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC;AACzB,IAAM,IAAI,SAAS,EAAE;AACrB,MAAQ,UAAU,GAAE;AACpB,MAAQ,SAAS,GAAG,KAAI;AACxB,KAAO;AACP,IAAM,IAAI,CAAC,aAAa,EAAE,EAAA,QAAQ,GAAG,KAAI,EAAA;AACzC,GAAK;AACL,EAAIA,IAAI,QAAQ,GAAG,UAAU,GAAG,WAAW,CAAC,MAAK;AACjD,EAAI,IAAI,QAAQ,GAAG,cAAc,EAAE;AACnC,IAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAC;AACjD,IAAM,UAAU,IAAI,SAAQ;AAC5B,GAAK;AACL,EAAI,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC;AAC1D,CAAC,CAAA;AACH;AACE,MAAA,CAAA,SAAA,CAAA,SAAA,GAAA,SAAA,SAAA,EAAU,IAAI,EAAE,EAAE,EAAE;AACtB,EAAIA,IAAI,IAAI,GAAG,IAAIE,6BAAO;AAC1B,EAAI,IAAI,CAAC,KAAK,CAAC,OAAO,WAAE,IAAI,EAAE,CAAC,EAAK;AACpC,IAAMF,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI;AAChF,UAAY,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,KAAI;AACvD,IAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAC;AACzC,GAAK,EAAE,IAAI,EAAE,EAAE,EAAC;AAChB,EAAI,OAAO,IAAI;AACb,CAAC,CAAA;AACH;iBACE,OAAO,GAAA,SAAA,OAAA,EAAC,KAAK,EAAE;AACjB,EAAI,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAA,EAAE,OAAO,IAAI,EAAA;AACzC,EAAI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,GAAA,EAAO,EAAA,OAAA,IAAI,IAAI,CAAC,GAAG,CAAA,CAAA,EAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC;AACxF,CAAC,CAAA;AACH;AACE;AACA;AACA;AACA;AACA;AACA,MAAA,CAAA,SAAA,CAAA,OAAA,GAAA,SAAA,OAAA,EAAQ,gBAAgB,EAAE,YAAY,EAAE;AAC1C,EAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAA,EAAE,OAAO,IAAI,EAAA;AACrC;AACA,EAAIA,IAAI,YAAY,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,EAAC;AAChF;AACA,EAAIA,IAAI,OAAO,GAAG,gBAAgB,CAAC,QAAO;AAC1C,EAAIA,IAAI,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC,OAAM;AAChD,EAAIA,IAAI,UAAU,GAAG,IAAI,CAAC,WAAU;AACpC,EAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAA,UAAC,MAAQ,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,EAAA,UAAU,KAAE,EAAE,EAAE,KAAK,EAAC;AAC3E;AACA,EAAIA,IAAI,QAAQ,GAAG,aAAY;AAC/B,EAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAA,UAAC,MAAQ;AAC/B,IAAMA,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAC;AAC7C,IAAM,IAAI,GAAG,IAAI,IAAI,IAAE,MAAM,EAAA;AAC7B,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,EAAC;AACxC,IAAMA,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,EAAC;AACjC,IAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACrB,MAAQA,IAAI,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC;AACjF,MAAQA,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,EAAE,GAAG,CAAC,EAAC;AAC9F,MAAQ,IAAI,SAAS,EAAE,EAAA,UAAU,GAAE,EAAA;AACnC,MAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,CAAC,EAAC;AACzD,KAAO,MAAM;AACb,MAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAC;AACxC,KAAO;AACP,GAAK,EAAE,KAAK,EAAC;AACb;AACA,EAAIA,IAAI,OAAO,GAAG,GAAE;AACpB,EAAI,KAAKA,IAAI,CAAC,GAAG,YAAY,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE;AAChD,IAAA,EAAM,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,EAAA;AAC7C,EAAIA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,EAAC;AAC/E,EAAIA,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,UAAU,EAAC;AAC9C;AACA,EAAI,IAAI,MAAM,CAAC,cAAc,EAAE,GAAG,eAAe;AACjD,IAAA,EAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,EAAC,EAAA;AACvE,EAAI,OAAO,MAAM;AACf,CAAC,CAAA;AACH;AACE,MAAA,CAAA,SAAA,CAAA,cAAA,GAAA,SAAA,cAAA,IAAiB;AACnB,EAAIA,IAAI,KAAK,GAAG,EAAC;AACjB,EAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAA,UAAC,MAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAE,KAAK,GAAA,EAAE,EAAE,EAAC;AAC3D,EAAI,OAAO,KAAK;AACd,CAAC,CAAA;AACH;AACE;AACA;AACA;AACA;AACA;AACA;iBACA,QAAQ,GAAA,SAAA,QAAA,EAAC,IAAwB,EAAE;+BAAtB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAA,CAAA;AAAS;AACtC,EAAIA,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAM;AACpE,EAAIA,IAAI,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,EAAC;AAC9B,EAAI,IAAI,CAAC,KAAK,CAAC,OAAO,WAAE,IAAI,EAAE,CAAC,EAAK;AACpC,IAAM,IAAI,CAAC,IAAI,IAAI,EAAE;AACrB,MAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC;AACxB,MAAQ,IAAI,IAAI,CAAC,SAAS,EAAA,EAAE,MAAM,GAAE,EAAA;AACpC,KAAO,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AAC5B,MAAQA,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,GAAE;AACnF,MAAQ,OAAO,GAAE;AACjB,MAAQ,IAAI,GAAG,EAAA,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,EAAC,EAAA;AAC9C,MAAQ,IAAI,IAAI,EAAE;AAClB,QAAUA,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC;AACpF,QAAU,IAAI,SAAS,EAAE,EAAA,MAAM,GAAE,EAAA;AACjC,QAAUA,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,EAAC;AAChG,QAAU,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AACjE,UAAA,EAAY,KAAK,CAAC,IAAI,CAAC,GAAG,OAAM,EAAA;AAChC;AACA,UAAA,EAAY,KAAK,CAAC,IAAI,CAAC,OAAO,EAAC,EAAA;AAC/B,OAAS;AACT,KAAO,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE;AAC3B,MAAQ,OAAO,GAAE;AACjB,KAAO;AACP,GAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAC;AAC5B,EAAI,OAAO,IAAI,MAAM,CAACG,gCAAY,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC;AAC/D,CACD,CAAA;AACD;AACA,MAAM,CAAC,KAAK,GAAG,IAAI,MAAM,CAACA,gCAAY,CAAC,KAAK,EAAE,CAAC,EAAC;AAChD;AACA,SAAS,YAAY,CAAC,KAAK,EAAE,CAAC,EAAE;AAChC,EAAEH,IAAI,SAAQ;AACd,EAAE,KAAK,CAAC,OAAO,CAAA,UAAE,IAAI,EAAE,CAAC,EAAK;AAC7B,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;AACtC,MAAM,QAAQ,GAAG,EAAC;AAClB,MAAM,OAAO,KAAK;AAClB,KAAK;AACL,GAAG,EAAC;AACJ,EAAE,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC9B,CAAC;AACD;AACA,IAAM,IAAI,GACR,SAAA,IAAW,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE;AAClD;AACA,EAAI,IAAI,CAAC,GAAG,GAAG,IAAG;AAClB;AACA,EAAI,IAAI,CAAC,IAAI,GAAG,KAAI;AACpB;AACA;AACA;AACA,EAAI,IAAI,CAAC,SAAS,GAAG,UAAS;AAC9B;AACA;AACA,EAAI,IAAI,CAAC,YAAY,GAAG,aAAY;AAClC,CAAC,CAAA;AACH;eACE,KAAK,GAAA,SAAA,KAAA,EAAC,KAAK,EAAE;AACf,EAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;AACrD,IAAMA,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAC;AAC5C,IAAM,IAAI,IAAI,EAAE,EAAA,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAA;AAC7E,GAAK;AACH,CACD,CAAA;AACD;AACA;AACA;AACA;AACa,IAAA,YAAY,GACvB,SAAA,YAAW,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;AAClD,EAAI,IAAI,CAAC,IAAI,GAAG,KAAI;AACpB,EAAI,IAAI,CAAC,MAAM,GAAG,OAAM;AACxB,EAAI,IAAI,CAAC,UAAU,GAAG,WAAU;AAChC,EAAI,IAAI,CAAC,QAAQ,GAAG,SAAQ;AAC1B,EACD;AACD;AACAD,IAAM,cAAc,GAAG,GAAE;AACzB;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE;AACvD,EAAEC,IAAI,SAAS,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAO;AACjD,EAAE,IAAI,SAAS,EAAA,EAAE,OAAO,SAAS,CAAC,YAAY,EAAA;AAC9C;AACA,EAAE,IAAI,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,EAAA,EAAE,OAAO,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAC,EAAA;AACpG;AACA,EAAEA,IAAI,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,qBAAqB,EAAC;AAClD;AACA,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;AAC5B,IAAI,OAAO,OAAO;AAClB,GAAG,MAAM,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACvD,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI;AACzC,MAAM,EAAA,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACpG,8BAA8B,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAA;AAChH;AACA,MAAM,EAAA,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACpH,8BAA8B,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAA;AACrD,GAAG,MAAM,IAAI,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,KAAK,IAAI,EAAE,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,KAAK,CAAC,EAAE;AAChH;AACA,IAAIA,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,aAAa;AACnH,0DAA0D,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,EAAC;AAChG,IAAIA,IAAI,UAAU,GAAG,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;AAC3H,IAAI,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,GAAG,IAAI;AACzG,sDAAsD,OAAO,EAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACxF,4BAA4B,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE,CAAC,IAAI,CAAC;AAC9D,GAAG,MAAM,IAAI,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AAC9C;AACA;AACA,IAAI,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC;AAC7D,4BAA4B,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC;AAC/D,4BAA4B,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC;AACxF,GAAG,MAAM;AACT,IAAI,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;AACjE,4BAA4B,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;AACnE,4BAA4B,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC;AACxF,GAAG;AACH,CAAC;AACD;AACA,SAAS,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE;AAC7C,EAAE,IAAI,CAAC,UAAU,EAAA,EAAE,OAAO,KAAK,EAAA;AAC/B,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAA,EAAE,OAAO,IAAI,EAAA;AACxC,EAAEA,IAAI,QAAQ,GAAG,MAAK;AACtB,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,GAAG,EAAK;AACpD,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACjD,MAAA,EAAM,IAAI,KAAK,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;AAC5D,QAAQ,EAAA,QAAQ,GAAG,KAAI,EAAA,EAAA;AACvB,GAAG,EAAC;AACJ,EAAE,OAAO,QAAQ;AACjB,CAAC;AACD;AACA,SAAS,SAAS,CAAC,GAAG,EAAE;AACxB,EAAEA,IAAI,MAAM,GAAG,GAAE;AACjB,EAAE,GAAG,CAAC,OAAO,CAAA,UAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAA,EAAA,OAAK,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAA,CAAA,EAAC,EAAC;AAC9D,EAAE,OAAO,MAAM;AACf,CAAC;AACD;AACA,SAAS,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE;AACpC,EAAE,IAAI,CAAC,MAAM,EAAA,EAAE,OAAO,IAAI,EAAA;AAC1B,EAAEA,IAAI,MAAM,GAAG,GAAE;AACjB,EAAE,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC7C,IAAIA,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;AAC7E,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,EAAA,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAC,EAAA;AACzC,GAAG;AACH,EAAE,OAAO,MAAM;AACf,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;AACzD,EAAEA,IAAI,aAAa,GAAG,iBAAiB,CAAC,KAAK,CAAC,EAAE,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAM;AAC/F,EAAEA,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,aAAa,EAAC;AACjF,EAAE,IAAI,CAAC,GAAG,EAAA,EAAE,MAAM,EAAA;AAClB;AACA,EAAEA,IAAI,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAC;AAC1D,EAAEA,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE;AAC9G,kEAAkE,WAAW,EAAE,aAAa,EAAC;AAC7F;AACA,EAAEA,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC,SAAS,EAAE,IAAI,GAAG,GAAG,CAAC,SAAS,GAAG,KAAK,EAAE,IAAI,EAAE,CAAC,EAAC;AACrG,EAAE,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,CAAA,IAAA,EAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,cAAc,EAAE,EAAC;AACrH,CAAC;AACD;AACAA,IAAI,mBAAmB,GAAG,KAAK,EAAE,0BAA0B,GAAG,KAAI;AAClE;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,KAAK,EAAE;AAClC,EAAEA,IAAI,OAAO,GAAG,KAAK,CAAC,QAAO;AAC7B,EAAE,IAAI,0BAA0B,IAAI,OAAO,EAAE;AAC7C,IAAI,mBAAmB,GAAG,MAAK;AAC/B,IAAI,0BAA0B,GAAG,QAAO;AACxC,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAA,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE;AACvF,MAAM,mBAAmB,GAAG,KAAI;AAChC,MAAM,KAAK;AACX,KAAK,EAAA;AACL,GAAG;AACH,EAAE,OAAO,mBAAmB;AAC5B,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,EAAE,EAAE;AACjC,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC;AAC1C,CAAC;AACD;AACAD,IAAM,UAAU,GAAG,IAAIK,0BAAS,CAAC,SAAS,EAAC;AAC3CL,IAAM,eAAe,GAAG,IAAIK,0BAAS,CAAC,cAAc,EAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,OAAO,CAAC,MAAM,EAAE;AAChC,EAAE,MAAM,GAAG,CAAC,KAAK,EAAE,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,GAAG;AAChD,YAAY,aAAa,EAAE,MAAM,IAAI,MAAM,CAAC,aAAa,IAAI,GAAG,EAAC;AACjE,EAAE,OAAO,IAAIC,uBAAM,CAAC;AACpB,IAAI,GAAG,EAAE,UAAU;AACnB;AACA,IAAI,KAAK,EAAE;AACX,MAAM,mBAAI,GAAG;AACb,QAAQ,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AACpE,OAAO;AACP,MAAM,qBAAK,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;AAC7B,QAAQ,OAAO,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,CAAC;AACxD,OAAO;AACP,KAAK;AACL;AACA,IAAA,MAAA,EAAI,MAAM;AACV;AACA,IAAI,KAAK,EAAE;AACX,MAAM,eAAe,EAAE;AACvB,QAAQ,WAAW,EAAA,SAAA,WAAA,CAAC,IAAI,EAAE,CAAC,EAAE;AAC7B,UAAUL,IAAI,OAAO,GAAG,CAAC,CAAC,SAAS,IAAI,aAAa,GAAG,IAAI,GAAG,CAAC,CAAC,SAAS,IAAI,aAAa,GAAG,IAAI,GAAG,KAAI;AACxG,UAAU,IAAI,CAAC,OAAO,EAAA,EAAE,OAAO,KAAK,EAAA;AACpC,UAAU,CAAC,CAAC,cAAc,GAAE;AAC5B,UAAU,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;AACnD,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACO,SAAS,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE;AACtC,EAAEA,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAC;AACvC,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,EAAA,EAAE,OAAO,KAAK,EAAA;AACtD,EAAE,IAAI,QAAQ,EAAE,EAAA,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAA;AAC7D,EAAE,OAAO,IAAI;AACb,CAAC;AACD;AACA;AACA;AACO,SAAS,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE;AACtC,EAAEA,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAC;AACvC,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,EAAA,EAAE,OAAO,KAAK,EAAA;AACxD,EAAE,IAAI,QAAQ,EAAE,EAAA,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAA;AAC5D,EAAE,OAAO,IAAI;AACb,CAAC;AACD;AACA;AACA;AACO,SAAS,SAAS,CAAC,KAAK,EAAE;AACjC,EAAEA,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAC;AACvC,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC;AACxC,CAAC;AACD;AACA;AACA;AACO,SAAS,SAAS,CAAC,KAAK,EAAE;AACjC,EAAEA,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAC;AACvC,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC;AAC1C;;;;;;;;;;"}