;; Copyright Â© 2021, JUXT LTD.

{:paths ["src"]
 :deps {org.clojure/clojure {:mvn/version "1.11.0"}

        ;; Project skeleton - also see src/config.edn
        integrant/integrant {:mvn/version "0.7.0"}
        aero/aero {:mvn/version "1.1.3"}
        io.aviso/pretty {:mvn/version "0.1.35"}

        ;; XT
        com.xtdb/xtdb-core {:mvn/version "1.21.0-beta3"}
        com.xtdb/xtdb-rocksdb {:mvn/version "1.21.0-beta3"}
        com.xtdb/xtdb-lucene {:mvn/version "1.21.0-beta3"}
        com.xtdb/xtdb-http-server {:mvn/version "1.21.0-beta3"}

        ;; Jetty
        ring/ring-jetty-adapter {:mvn/version "1.9.5"}

        ;; Logging
        org.clojure/tools.logging {:mvn/version "1.1.0"}
        org.slf4j/jcl-over-slf4j {:mvn/version "1.7.30"}
        org.slf4j/jul-to-slf4j {:mvn/version "1.7.30"}
        org.slf4j/log4j-over-slf4j {:mvn/version "1.7.30"}
        ch.qos.logback/logback-classic {:mvn/version "1.2.3"
                                        :exclusions [org.slf4j/slf4j-api]}

        ;; Content negotiation
        juxt/pick
        {:git/url "https://github.com/juxt/pick.git"
         :sha "e4b314cb9e94121fe8005c5628f7f33d28cdefd4"}
        #_{:local/root "../pick"}

        juxt/grab
        {:git/url "https://github.com/juxt/grab.git"
         :sha "63ca3fd6542705151ff6ef7127a79478cae12b2b"
         ;;:local/root "../grab"
         }

        ;; JSON Schema support functions
        jinx/jinx
        {:git/url "https://github.com/juxt/jinx.git"
         :sha "68325edd1c4d5884d78e11f2a31d871a8512893d"}
        #_{:local/root "../jinx"}

        ;; Ring for some utility code
        ring/ring-core {:mvn/version "1.9.1"}

        ;; Passwords
        crypto-password/crypto-password {:mvn/version "0.2.1"}

        ;; Support for Representations
        clj-yaml/clj-yaml {:mvn/version "0.4.0"}
        hiccup/hiccup {:mvn/version "2.0.0-alpha2"}
        metosin/jsonista {:mvn/version "0.2.7"}
        json-html/json-html {:mvn/version "0.4.0"}

        ;; Selmer templating
        selmer/selmer {:mvn/version "1.12.50"}

        ;; REPL highlighting
        mvxcvi/puget {:mvn/version "1.3.1"}

        ;; Time
        tick/tick {:mvn/version "0.5.0-RC4"}

        ;; Required for Slack integration
        lt.tokenmill/timewords {:mvn/version "0.5.0"}

        ;; Required by a few components, including Slack and OpenID Connect
        java-http-clj/java-http-clj {:mvn/version "0.4.3"}

        ;; Required for OAuth2, not necessarily only for Auth0 since it
        ;; implements the relevant standards so any OAuth2 provided should work.
        com.auth0/java-jwt {:mvn/version "3.18.3"}
        com.auth0/jwks-rsa {:mvn/version "0.20.1"}

        ;; Malli is used for authorization only
        metosin/malli {:mvn/version "0.8.9"}
        }

 :aliases
 {:dev
  {:extra-paths ["dev" "test"]
   :extra-deps { ;; Convenience libraries made available during development
                org.clojure/test.check {:mvn/version "0.9.0"}
                org.clojure/alpha.spec {:git/url "https://github.com/clojure/spec-alpha2.git"
                                        :sha "c087ded910b3532a938b37e853df79fc3b9c48c1"}
                org.eclipse.jetty/jetty-jmx {:mvn/version "9.4.44.v20210927"}

                djblue/portal {:mvn/version "0.29.1"}
                }
   :jvm-opts ["-XX:-OmitStackTraceInFastThrow"
              "-Dclojure.server.site={:port,50505,:accept,juxt.site.alpha.repl-server/repl}"
              "-Dclojure.server.flip={:port,50506,:accept,juxt.flip.alpha.repl-server/repl}"
              "-Dclojure.spec.check-asserts=true"
              "--add-opens" "java.base/java.util.concurrent=ALL-UNNAMED"]}

  :test
  {:extra-paths ["test"]
   :extra-deps
   {lambdaisland/kaocha {:mvn/version "1.0.887"}
    lambdaisland/kaocha-junit-xml {:mvn/version "0.0.76"}
    nrepl/nrepl {:mvn/version "0.9.0"}
    }
   :jvm-opts ["--add-opens" "java.base/java.util.concurrent=ALL-UNNAMED"]
   }
  :coverage
  {:extra-paths ["test"]
   :extra-deps {
                lambdaisland/kaocha-cloverage {:mvn/version "1.0.75"}
                org.eclipse.jetty/jetty-jmx {:mvn/version "9.4.44.v20210927"}
                djblue/portal {:mvn/version "0.29.1"}}}

  :prod
  {:extra-paths ["prod"]
   :jvm-opts ["-Dcom.sun.management.jmxremote"
              "-Dcom.sun.management.jmxremote.ssl=false"
              "-Dcom.sun.management.jmxremote.authenticate=false"
              "-Dcom.sun.management.jmxremote.port=8001"]
   ;; nREPL can be useful debugging prod
   :extra-deps {nrepl/nrepl {:mvn/version "0.9.0"}
                org.eclipse.jetty/jetty-jmx {:mvn/version "9.4.44.v20210927"}
                }}}}
