import {
  Mark,
  markInputRule,
  markPasteRule,
  mergeAttributes
} from "./chunk-NLKFJLJH.js";
import "./chunk-XB6JRJJM.js";
import "./chunk-4ACCWERV.js";

// node_modules/@tiptap/extension-highlight/dist/tiptap-extension-highlight.esm.js
var inputRegex = /(?:^|\s)((?:==)((?:[^~=]+))(?:==))$/;
var pasteRegex = /(?:^|\s)((?:==)((?:[^~=]+))(?:==))/g;
var Highlight = Mark.create({
  name: "highlight",
  addOptions() {
    return {
      multicolor: false,
      HTMLAttributes: {}
    };
  },
  addAttributes() {
    if (!this.options.multicolor) {
      return {};
    }
    return {
      color: {
        default: null,
        parseHTML: (element) => element.getAttribute("data-color") || element.style.backgroundColor,
        renderHTML: (attributes) => {
          if (!attributes.color) {
            return {};
          }
          return {
            "data-color": attributes.color,
            style: `background-color: ${attributes.color}`
          };
        }
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "mark"
      }
    ];
  },
  renderHTML({ HTMLAttributes }) {
    return ["mark", mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];
  },
  addCommands() {
    return {
      setHighlight: (attributes) => ({ commands }) => {
        return commands.setMark(this.name, attributes);
      },
      toggleHighlight: (attributes) => ({ commands }) => {
        return commands.toggleMark(this.name, attributes);
      },
      unsetHighlight: () => ({ commands }) => {
        return commands.unsetMark(this.name);
      }
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-h": () => this.editor.commands.toggleHighlight()
    };
  },
  addInputRules() {
    return [
      markInputRule({
        find: inputRegex,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      markPasteRule({
        find: pasteRegex,
        type: this.type
      })
    ];
  }
});

// dep:@tiptap_extension-highlight
var tiptap_extension_highlight_default = Highlight;
export {
  Highlight,
  tiptap_extension_highlight_default as default,
  inputRegex,
  pasteRegex
};
//# sourceMappingURL=@tiptap_extension-highlight.js.map
