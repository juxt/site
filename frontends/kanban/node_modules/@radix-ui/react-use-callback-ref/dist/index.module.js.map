{"mappings":"+BAMA,SAASA,eAAkDC,GACzD,MAAMC,EAAcC,EAAMC,OAAOH,GAOjC,OALAE,EAAME,WAAU,KACdH,EAAYI,QAAUL,KAIjBE,EAAMI,SAAQ,IAAO,IAAIC,KAAJ,IAAAC,EAAA,OAAA,QAAAA,EAAaP,EAAYI,eAAzB,IAAAG,OAAA,EAAaA,EAAAC,KAAAR,KAAyBM,KAAa","sources":["./packages/react/use-callback-ref/src/useCallbackRef.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n"],"names":["useCallbackRef","callback","callbackRef","React","useRef","useEffect","current","useMemo","args","_callbackRef$current","call"],"version":3,"file":"index.module.js.map"}