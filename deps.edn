;; Copyright Â© 2021, JUXT LTD.

{:paths ["src"]
 :deps {org.clojure/clojure {:mvn/version "1.10.1"}

        ;; Project skeleton - also see src/config.edn
        integrant/integrant {:mvn/version "0.7.0"}
        aero/aero {:mvn/version "1.1.3"}
        io.aviso/pretty {:mvn/version "0.1.35"}

        ;; Crux
        juxt/crux-core {:mvn/version "21.04-1.16.0-beta"}
        juxt/crux-rocksdb {:mvn/version "21.04-1.16.0-beta"}

        ;; Jetty
        ring/ring-jetty-adapter {:mvn/version "1.9.1"}

        ;; Logging
        org.clojure/tools.logging {:mvn/version "1.1.0"}
        org.slf4j/jcl-over-slf4j {:mvn/version "1.7.30"}
        org.slf4j/jul-to-slf4j {:mvn/version "1.7.30"}
        org.slf4j/log4j-over-slf4j {:mvn/version "1.7.30"}
        ch.qos.logback/logback-classic {:mvn/version "1.2.3"
                                        :exclusions [org.slf4j/slf4j-api]}

        ;; Content negotiation
        juxt/pick
        {:git/url "https://github.com/juxt/pick.git"
         :sha "e4b314cb9e94121fe8005c5628f7f33d28cdefd4"}
        #_{:local/root "../pick"}

        ;; JSON Schema support functions
        jinx/jinx
        {:git/url "https://github.com/juxt/jinx.git"
         :sha "68325edd1c4d5884d78e11f2a31d871a8512893d"}
        #_{:local/root "../jinx"}

        ;; Ring for some utility code
        ring/ring-core {:mvn/version "1.9.1"}

        ;; Passwords
        crypto-password/crypto-password {:mvn/version "0.2.1"}

        ;; Support for Representations
        clj-yaml/clj-yaml {:mvn/version "0.4.0"}
        hiccup/hiccup {:mvn/version "2.0.0-alpha2"}
        metosin/jsonista {:mvn/version "0.2.7"}
        json-html/json-html {:mvn/version "0.4.0"}

        ;; AWS
        amazonica/amazonica {:mvn/version "0.3.154"}

        ;; Selmer templating
        selmer/selmer {:mvn/version "1.12.40"}

        ;; Required by a few components, including Slack and OpenID Connect
        java-http-clj/java-http-clj {:mvn/version "0.4.3"}

        ;; Required for OAuth2, not necessarily only for Auth0 since it
        ;; implements the relevant standards so any OAuth2 provided should work.
        com.auth0/java-jwt {:mvn/version "3.18.3"}
        com.auth0/jwks-rsa {:mvn/version "0.20.1"}

        ;; Malli is used for authorization only
        metosin/malli {:mvn/version "0.8.3"}}

 :aliases
 {:dev
  {:extra-paths ["dev" "test"]
   :jvm-opts ["-XX:-OmitStackTraceInFastThrow"
              "-Dclojure.server.site={:port,50505,:accept,juxt.site.alpha.repl-server/repl}"]}

  :test
  {:extra-paths ["dev" "test"]
   :extra-deps
   {lambdaisland/kaocha {:mvn/version "1.0.829"}
    lambdaisland/kaocha-junit-xml {:mvn/version "0.0.76"}}}

  :profile
  {:extra-deps {com.clojure-goes-fast/clj-async-profiler {:mvn/version "0.5.0"}}
   :jvm-opts ["-Djdk.attach.allowAttachSelf"]}

  :prod
  {:extra-paths ["prod"]}}}
