{"version":3,"file":"MediaQuery.js","sources":["../../../src/components/MediaQuery/MediaQuery.tsx"],"sourcesContent":["import React, { Children } from 'react';\nimport { MantineNumberSize, CSSObject } from '@mantine/styles';\nimport useStyles from './MediaQuery.styles';\n\nexport interface MediaQueryProps {\n  className?: string;\n\n  /** Child that should be shown at given breakpoint, it must accept className prop */\n  children: React.ReactNode;\n\n  /** Styles applied to child when viewport is smaller than given breakpoint */\n  smallerThan?: MantineNumberSize;\n\n  /** Styles applied to child when viewport is larger than given breakpoint */\n  largerThan?: MantineNumberSize;\n\n  /** Any other media query */\n  query?: string;\n\n  /** Styles applied to child when breakpoint matches */\n  styles: CSSObject;\n}\n\nexport function MediaQuery({\n  children,\n  smallerThan,\n  largerThan,\n  query,\n  styles,\n  className,\n}: MediaQueryProps) {\n  const { classes, cx } = useStyles(\n    { smallerThan, largerThan, query, styles },\n    { name: 'MediaQuery' }\n  );\n  const child = Children.only(children) as React.ReactElement;\n  return React.cloneElement(child, {\n    className: cx(classes.media, child.props?.className, className),\n  });\n}\n\nMediaQuery.displayName = '@mantine/core/MediaQuery';\n"],"names":[],"mappings":";;;AAEO,SAAS,UAAU,CAAC;AAC3B,EAAE,QAAQ;AACV,EAAE,WAAW;AACb,EAAE,UAAU;AACZ,EAAE,KAAK;AACP,EAAE,MAAM;AACR,EAAE,SAAS;AACX,CAAC,EAAE;AACH,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,GAAG,SAAS,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;AACxG,EAAE,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,EAAE,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE;AACnC,IAAI,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;AAC/F,GAAG,CAAC,CAAC;AACL,CAAC;AACD,UAAU,CAAC,WAAW,GAAG,0BAA0B;;;;"}