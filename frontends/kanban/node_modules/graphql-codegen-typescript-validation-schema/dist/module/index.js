import { ZodSchemaVisitor } from './zod/index';
import { transformSchemaAST } from '@graphql-codegen/schema-ast';
import { YupSchemaVisitor } from './yup/index';
import { oldVisit } from '@graphql-codegen/plugin-helpers';
export const plugin = (schema, _documents, config) => {
    const { schema: _schema, ast } = transformSchemaAST(schema, config);
    const { buildImports, initialEmit, ...visitor } = schemaVisitor(_schema, config);
    const result = oldVisit(ast, {
        leave: visitor,
    });
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    const generated = result.definitions.filter(def => typeof def === 'string');
    return {
        prepend: buildImports(),
        content: [initialEmit(), ...generated].join('\n'),
    };
};
const schemaVisitor = (schema, config) => {
    if (config?.schema === 'zod') {
        return ZodSchemaVisitor(schema, config);
    }
    return YupSchemaVisitor(schema, config);
};
