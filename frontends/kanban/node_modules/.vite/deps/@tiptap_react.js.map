{
  "version": 3,
  "sources": ["../../@tiptap/extension-bubble-menu/src/bubble-menu-plugin.ts", "../../@tiptap/extension-bubble-menu/src/bubble-menu.ts", "../../@tiptap/extension-floating-menu/src/floating-menu-plugin.ts", "../../@tiptap/extension-floating-menu/src/floating-menu.ts", "../../@tiptap/react/src/BubbleMenu.tsx", "../../@tiptap/react/src/Editor.ts", "../../@tiptap/react/src/EditorContent.tsx", "../../@tiptap/react/src/FloatingMenu.tsx", "../../@tiptap/react/src/useReactNodeView.ts", "../../@tiptap/react/src/NodeViewContent.tsx", "../../@tiptap/react/src/NodeViewWrapper.tsx", "../../@tiptap/react/src/ReactRenderer.tsx", "../../@tiptap/react/src/ReactNodeViewRenderer.tsx", "../../@tiptap/react/src/useEditor.ts"],
  "sourcesContent": ["import {\n  Editor,\n  isNodeSelection,\n  isTextSelection,\n  posToDOMRect,\n} from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from 'prosemirror-state'\nimport { EditorView } from 'prosemirror-view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface BubbleMenuPluginProps {\n  pluginKey: PluginKey | string,\n  editor: Editor,\n  element: HTMLElement,\n  tippyOptions?: Partial<Props>,\n  shouldShow?: ((props: {\n    editor: Editor,\n    view: EditorView,\n    state: EditorState,\n    oldState?: EditorState,\n    from: number,\n    to: number,\n  }) => boolean) | null,\n}\n\nexport type BubbleMenuViewProps = BubbleMenuPluginProps & {\n  view: EditorView,\n}\n\nexport class BubbleMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public shouldShow: Exclude<BubbleMenuPluginProps['shouldShow'], null> = ({\n    view,\n    state,\n    from,\n    to,\n  }) => {\n    const { doc, selection } = state\n    const { empty } = selection\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    const isEmptyTextBlock = !doc.textBetween(from, to).length\n      && isTextSelection(state.selection)\n\n    // When clicking on a element inside the bubble menu the editor \"blur\" event\n    // is called and the bubble menu item is focussed. In this case we should\n    // consider the menu as part of the ditor and keep showing the menu\n    const isChildOfMenu = this.element.contains(document.activeElement)\n\n    const hasEditorFocus = view.hasFocus() || isChildOfMenu\n\n    if (\n      !hasEditorFocus\n      || empty\n      || isEmptyTextBlock\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions = {},\n    shouldShow,\n  }: BubbleMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.addEventListener('dragstart', this.dragstartHandler)\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  dragstartHandler = () => {\n    this.hide()\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (\n      event?.relatedTarget\n      && this.element.parentNode?.contains(event.relatedTarget as Node)\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'top',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', event => {\n        this.blurHandler({ event })\n      })\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state, composing } = view\n    const { doc, selection } = state\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (composing || isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    // support for CellSelections\n    const { ranges } = selection\n    const from = Math.min(...ranges.map(range => range.$from.pos))\n    const to = Math.max(...ranges.map(range => range.$to.pos))\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n      from,\n      to,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect: this.tippyOptions?.getReferenceClientRect || (() => {\n        if (isNodeSelection(state.selection)) {\n          const node = view.nodeDOM(from) as HTMLElement\n\n          if (node) {\n            return node.getBoundingClientRect()\n          }\n        }\n\n        return posToDOMRect(view, from, to)\n      }),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.removeEventListener('dragstart', this.dragstartHandler)\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const BubbleMenuPlugin = (options: BubbleMenuPluginProps) => {\n  return new Plugin({\n    key: typeof options.pluginKey === 'string'\n      ? new PluginKey(options.pluginKey)\n      : options.pluginKey,\n    view: view => new BubbleMenuView({ view, ...options }),\n  })\n}\n", "import { Extension } from '@tiptap/core'\n\nimport { BubbleMenuPlugin, BubbleMenuPluginProps } from './bubble-menu-plugin'\n\nexport type BubbleMenuOptions = Omit<BubbleMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const BubbleMenu = Extension.create<BubbleMenuOptions>({\n  name: 'bubbleMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'bubbleMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      BubbleMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n", "import { Editor, posToDOMRect } from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from 'prosemirror-state'\nimport { EditorView } from 'prosemirror-view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface FloatingMenuPluginProps {\n  pluginKey: PluginKey | string,\n  editor: Editor,\n  element: HTMLElement,\n  tippyOptions?: Partial<Props>,\n  shouldShow?: ((props: {\n    editor: Editor,\n    view: EditorView,\n    state: EditorState,\n    oldState?: EditorState,\n  }) => boolean) | null,\n}\n\nexport type FloatingMenuViewProps = FloatingMenuPluginProps & {\n  view: EditorView,\n}\n\nexport class FloatingMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public shouldShow: Exclude<FloatingMenuPluginProps['shouldShow'], null> = ({ view, state }) => {\n    const { selection } = state\n    const { $anchor, empty } = selection\n    const isRootDepth = $anchor.depth === 1\n    const isEmptyTextBlock = $anchor.parent.isTextblock\n      && !$anchor.parent.type.spec.code\n      && !$anchor.parent.textContent\n\n    if (\n      !view.hasFocus()\n      || !empty\n      || !isRootDepth\n      || !isEmptyTextBlock\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions = {},\n    shouldShow,\n  }: FloatingMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (\n      event?.relatedTarget\n      && this.element.parentNode?.contains(event.relatedTarget as Node)\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'right',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', event => {\n        this.blurHandler({ event })\n      })\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const { doc, selection } = state\n    const { from, to } = selection\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect: this.tippyOptions?.getReferenceClientRect || (() => posToDOMRect(view, from, to)),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const FloatingMenuPlugin = (options: FloatingMenuPluginProps) => {\n  return new Plugin({\n    key: typeof options.pluginKey === 'string'\n      ? new PluginKey(options.pluginKey)\n      : options.pluginKey,\n    view: view => new FloatingMenuView({ view, ...options }),\n  })\n}\n", "import { Extension } from '@tiptap/core'\n\nimport { FloatingMenuPlugin, FloatingMenuPluginProps } from './floating-menu-plugin'\n\nexport type FloatingMenuOptions = Omit<FloatingMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const FloatingMenu = Extension.create<FloatingMenuOptions>({\n  name: 'floatingMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      FloatingMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n", "import { BubbleMenuPlugin, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\nimport React, {\n  useEffect, useState,\n} from 'react'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\nexport type BubbleMenuProps = Omit<Optional<BubbleMenuPluginProps, 'pluginKey'>, 'element'> & {\n  className?: string,\n  children: React.ReactNode\n}\n\nexport const BubbleMenu = (props: BubbleMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'bubbleMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null,\n    } = props\n\n    const plugin = BubbleMenuPlugin({\n      pluginKey,\n      editor,\n      element,\n      tippyOptions,\n      shouldShow,\n    })\n\n    editor.registerPlugin(plugin)\n    return () => editor.unregisterPlugin(pluginKey)\n  }, [\n    props.editor,\n    element,\n  ])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n", "import { Editor as CoreEditor } from '@tiptap/core'\nimport React from 'react'\n\nimport { EditorContentProps, EditorContentState } from './EditorContent'\n\nexport class Editor extends CoreEditor {\n  public contentComponent: React.Component<EditorContentProps, EditorContentState> | null = null\n}\n", "import React, { HTMLProps } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Editor } from './Editor'\nimport { ReactRenderer } from './ReactRenderer'\n\nconst Portals: React.FC<{ renderers: Map<string, ReactRenderer> }> = ({ renderers }) => {\n  return (\n    <>\n      {Array.from(renderers).map(([key, renderer]) => {\n        return ReactDOM.createPortal(\n          renderer.reactElement,\n          renderer.element,\n          key,\n        )\n      })}\n    </>\n  )\n}\n\nexport interface EditorContentProps extends HTMLProps<HTMLDivElement> {\n  editor: Editor | null,\n}\n\nexport interface EditorContentState {\n  renderers: Map<string, ReactRenderer>\n}\n\nexport class PureEditorContent extends React.Component<EditorContentProps, EditorContentState> {\n  editorContentRef: React.RefObject<any>\n\n  constructor(props: EditorContentProps) {\n    super(props)\n    this.editorContentRef = React.createRef()\n\n    this.state = {\n      renderers: new Map(),\n    }\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentDidUpdate() {\n    this.init()\n  }\n\n  init() {\n    const { editor } = this.props\n\n    if (editor && editor.options.element) {\n      if (editor.contentComponent) {\n        return\n      }\n\n      const element = this.editorContentRef.current\n\n      element.append(...editor.options.element.childNodes)\n\n      editor.setOptions({\n        element,\n      })\n\n      editor.contentComponent = this\n\n      editor.createNodeViews()\n    }\n  }\n\n  componentWillUnmount() {\n    const { editor } = this.props\n\n    if (!editor) {\n      return\n    }\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {},\n      })\n    }\n\n    editor.contentComponent = null\n\n    if (!editor.options.element.firstChild) {\n      return\n    }\n\n    const newElement = document.createElement('div')\n\n    newElement.append(...editor.options.element.childNodes)\n\n    editor.setOptions({\n      element: newElement,\n    })\n  }\n\n  render() {\n    const { editor, ...rest } = this.props\n\n    return (\n      <>\n        <div ref={this.editorContentRef} {...rest} />\n        <Portals renderers={this.state.renderers} />\n      </>\n    )\n  }\n}\n\nexport const EditorContent = React.memo(PureEditorContent)\n", "import { FloatingMenuPlugin, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\nimport React, {\n  useEffect, useState,\n} from 'react'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\nexport type FloatingMenuProps = Omit<Optional<FloatingMenuPluginProps, 'pluginKey'>, 'element'> & {\n  className?: string,\n  children: React.ReactNode\n}\n\nexport const FloatingMenu = (props: FloatingMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null,\n    } = props\n\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor,\n      element,\n      tippyOptions,\n      shouldShow,\n    })\n\n    editor.registerPlugin(plugin)\n    return () => editor.unregisterPlugin(pluginKey)\n  }, [\n    props.editor,\n    element,\n  ])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n", "import { createContext, useContext } from 'react'\n\nexport interface ReactNodeViewContextProps {\n  onDragStart: (event: DragEvent) => void,\n  nodeViewContentRef: (element: HTMLElement | null) => void,\n}\n\nexport const ReactNodeViewContext = createContext<Partial<ReactNodeViewContextProps>>({\n  onDragStart: undefined,\n})\n\nexport const useReactNodeView = () => useContext(ReactNodeViewContext)\n", "import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView'\n\nexport interface NodeViewContentProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewContent: React.FC<NodeViewContentProps> = props => {\n  const Tag = props.as || 'div'\n  const { nodeViewContentRef } = useReactNodeView()\n\n  return (\n    <Tag\n      {...props}\n      ref={nodeViewContentRef}\n      data-node-view-content=\"\"\n      style={{\n        whiteSpace: 'pre-wrap',\n        ...props.style,\n      }}\n    />\n  )\n}\n", "import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView'\n\nexport interface NodeViewWrapperProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewWrapper: React.FC<NodeViewWrapperProps> = React.forwardRef((props, ref) => {\n  const { onDragStart } = useReactNodeView()\n  const Tag = props.as || 'div'\n\n  return (\n    <Tag\n      {...props}\n      ref={ref}\n      data-node-view-wrapper=\"\"\n      onDragStart={onDragStart}\n      style={{\n        whiteSpace: 'normal',\n        ...props.style,\n      }}\n    />\n  )\n})\n", "import { Editor } from '@tiptap/core'\nimport React from 'react'\nimport { flushSync } from 'react-dom'\n\nimport { Editor as ExtendedEditor } from './Editor'\n\nfunction isClassComponent(Component: any) {\n  return !!(\n    typeof Component === 'function'\n    && Component.prototype\n    && Component.prototype.isReactComponent\n  )\n}\n\nfunction isForwardRefComponent(Component: any) {\n  return !!(\n    typeof Component === 'object'\n    && Component.$$typeof?.toString() === 'Symbol(react.forward_ref)'\n  )\n}\n\nexport interface ReactRendererOptions {\n  editor: Editor,\n  props?: Record<string, any>,\n  as?: string,\n  className?: string,\n}\n\ntype ComponentType<R, P> =\n  React.ComponentClass<P> |\n  React.FunctionComponent<P> |\n  React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<R>>;\n\nexport class ReactRenderer<R = unknown, P = unknown> {\n  id: string\n\n  editor: ExtendedEditor\n\n  component: any\n\n  element: Element\n\n  props: Record<string, any>\n\n  reactElement: React.ReactNode\n\n  ref: R | null = null\n\n  constructor(component: ComponentType<R, P>, {\n    editor,\n    props = {},\n    as = 'div',\n    className = '',\n  }: ReactRendererOptions) {\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString()\n    this.component = component\n    this.editor = editor as ExtendedEditor\n    this.props = props\n    this.element = document.createElement(as)\n    this.element.classList.add('react-renderer')\n\n    if (className) {\n      this.element.classList.add(...className.split(' '))\n    }\n\n    this.render()\n  }\n\n  render(): void {\n    const Component = this.component\n    const props = this.props\n\n    if (isClassComponent(Component) || isForwardRefComponent(Component)) {\n      props.ref = (ref: R) => {\n        this.ref = ref\n      }\n    }\n\n    this.reactElement = <Component {...props } />\n\n    flushSync(() => {\n      if (this.editor?.contentComponent) {\n        this.editor.contentComponent.setState({\n          renderers: this.editor.contentComponent.state.renderers.set(\n            this.id,\n            this,\n          ),\n        })\n      }\n    })\n  }\n\n  updateProps(props: Record<string, any> = {}): void {\n    this.props = {\n      ...this.props,\n      ...props,\n    }\n\n    this.render()\n  }\n\n  destroy(): void {\n    flushSync(() => {\n      if (this.editor?.contentComponent) {\n        const { renderers } = this.editor.contentComponent.state\n\n        renderers.delete(this.id)\n\n        this.editor.contentComponent.setState({\n          renderers,\n        })\n      }\n    })\n  }\n}\n", "import {\n  NodeView,\n  NodeViewProps,\n  NodeViewRenderer,\n  NodeViewRendererOptions,\n  NodeViewRendererProps,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from 'prosemirror-model'\nimport { Decoration, NodeView as ProseMirrorNodeView } from 'prosemirror-view'\nimport React from 'react'\n\nimport { Editor } from './Editor'\nimport { ReactRenderer } from './ReactRenderer'\nimport { ReactNodeViewContext, ReactNodeViewContextProps } from './useReactNodeView'\n\nexport interface ReactNodeViewRendererOptions extends NodeViewRendererOptions {\n  update:\n    | ((props: {\n        oldNode: ProseMirrorNode;\n        oldDecorations: Decoration[];\n        newNode: ProseMirrorNode;\n        newDecorations: Decoration[];\n        updateProps: () => void;\n      }) => boolean)\n    | null;\n  as?: string;\n  className?: string;\n}\n\nclass ReactNodeView extends NodeView<\n  React.FunctionComponent,\n  Editor,\n  ReactNodeViewRendererOptions\n> {\n  renderer!: ReactRenderer\n\n  contentDOMElement!: HTMLElement | null\n\n  mount() {\n    const props: NodeViewProps = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n    }\n\n    if (!(this.component as any).displayName) {\n      const capitalizeFirstChar = (string: string): string => {\n        return string.charAt(0).toUpperCase() + string.substring(1)\n      }\n\n      this.component.displayName = capitalizeFirstChar(this.extension.name)\n    }\n\n    const ReactNodeViewProvider: React.FunctionComponent = componentProps => {\n      const Component = this.component\n      const onDragStart = this.onDragStart.bind(this)\n      const nodeViewContentRef: ReactNodeViewContextProps['nodeViewContentRef'] = element => {\n        if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n          element.appendChild(this.contentDOMElement)\n        }\n      }\n\n      return (\n        <ReactNodeViewContext.Provider value={{ onDragStart, nodeViewContentRef }}>\n          <Component {...componentProps} />\n        </ReactNodeViewContext.Provider>\n      )\n    }\n\n    ReactNodeViewProvider.displayName = 'ReactNodeView'\n\n    this.contentDOMElement = this.node.isLeaf\n      ? null\n      : document.createElement(this.node.isInline ? 'span' : 'div')\n\n    if (this.contentDOMElement) {\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit'\n    }\n\n    let as = this.node.isInline ? 'span' : 'div'\n\n    if (this.options.as) {\n      as = this.options.as\n    }\n\n    const { className = '' } = this.options\n\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim(),\n    })\n  }\n\n  get dom() {\n    if (\n      this.renderer.element.firstElementChild\n      && !this.renderer.element.firstElementChild?.hasAttribute('data-node-view-wrapper')\n    ) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element as HTMLElement\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    return this.contentDOMElement\n  }\n\n  update(node: ProseMirrorNode, decorations: Decoration[]) {\n    const updateProps = (props?: Record<string, any>) => {\n      this.renderer.updateProps(props)\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node\n      const oldDecorations = this.decorations\n\n      this.node = node\n      this.decorations = decorations\n\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({ node, decorations }),\n      })\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n\n    updateProps({ node, decorations })\n\n    return true\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n  }\n\n  destroy() {\n    this.renderer.destroy()\n    this.contentDOMElement = null\n  }\n}\n\nexport function ReactNodeViewRenderer(\n  component: any,\n  options?: Partial<ReactNodeViewRendererOptions>,\n): NodeViewRenderer {\n  return (props: NodeViewRendererProps) => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it\u2019s `undefined` because <editor-content> isn\u2019t rendered yet\n    if (!(props.editor as Editor).contentComponent) {\n      return {}\n    }\n\n    return new ReactNodeView(component, props, options) as unknown as ProseMirrorNodeView\n  }\n}\n", "import { EditorOptions } from '@tiptap/core'\nimport { DependencyList, useEffect, useState } from 'react'\n\nimport { Editor } from './Editor'\n\nfunction useForceUpdate() {\n  const [, setValue] = useState(0)\n\n  return () => setValue(value => value + 1)\n}\n\nexport const useEditor = (options: Partial<EditorOptions> = {}, deps: DependencyList = []) => {\n  const [editor, setEditor] = useState<Editor | null>(null)\n  const forceUpdate = useForceUpdate()\n\n  useEffect(() => {\n    let isMounted = true\n\n    const instance = new Editor(options)\n\n    setEditor(instance)\n\n    instance.on('transaction', () => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          if (isMounted) {\n            forceUpdate()\n          }\n        })\n      })\n    })\n\n    return () => {\n      instance.destroy()\n      isMounted = false\n    }\n  }, deps)\n\n  return editor\n}\n"],
  "mappings": "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",
  "names": ["view", "view", "BubbleMenu", "React", "Editor", "CoreEditor", "ReactDOM", "FloatingMenu"]
}
