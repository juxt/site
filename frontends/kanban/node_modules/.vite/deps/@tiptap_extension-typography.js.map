{
  "version": 3,
  "sources": ["../../@tiptap/extension-typography/src/typography.ts", "dep:@tiptap_extension-typography"],
  "sourcesContent": ["import { Extension, textInputRule } from '@tiptap/core'\n\nexport interface TypographyOptions {\n  emDash: false,\n  ellipsis: false,\n  openDoubleQuote: false,\n  closeDoubleQuote: false,\n  openSingleQuote: false,\n  closeSingleQuote: false,\n  leftArrow: false,\n  rightArrow: false,\n  copyright: false,\n  trademark: false,\n  registeredTrademark: false,\n  oneHalf: false,\n  plusMinus: false,\n  notEqual: false,\n  laquo: false,\n  raquo: false,\n  multiplication: false,\n  superscriptTwo: false,\n  superscriptThree: false,\n  oneQuarter: false,\n  threeQuarters: false,\n}\n\nexport const emDash = textInputRule({\n  find: /--$/,\n  replace: '\u2014',\n})\n\nexport const ellipsis = textInputRule({\n  find: /\\.\\.\\.$/,\n  replace: '\u2026',\n})\n\nexport const openDoubleQuote = textInputRule({\n  find: /(?:^|[\\s{[(<'\"\\u2018\\u201C])(\")$/,\n  replace: '\u201C',\n})\n\nexport const closeDoubleQuote = textInputRule({\n  find: /\"$/,\n  replace: '\u201D',\n})\n\nexport const openSingleQuote = textInputRule({\n  find: /(?:^|[\\s{[(<'\"\\u2018\\u201C])(')$/,\n  replace: '\u2018',\n})\n\nexport const closeSingleQuote = textInputRule({\n  find: /'$/,\n  replace: '\u2019',\n})\n\nexport const leftArrow = textInputRule({\n  find: /<-$/,\n  replace: '\u2190',\n})\n\nexport const rightArrow = textInputRule({\n  find: /->$/,\n  replace: '\u2192',\n})\n\nexport const copyright = textInputRule({\n  find: /\\(c\\)$/,\n  replace: '\u00A9',\n})\n\nexport const trademark = textInputRule({\n  find: /\\(tm\\)$/,\n  replace: '\u2122',\n})\n\nexport const registeredTrademark = textInputRule({\n  find: /\\(r\\)$/,\n  replace: '\u00AE',\n})\n\nexport const oneHalf = textInputRule({\n  find: /1\\/2$/,\n  replace: '\u00BD',\n})\n\nexport const plusMinus = textInputRule({\n  find: /\\+\\/-$/,\n  replace: '\u00B1',\n})\n\nexport const notEqual = textInputRule({\n  find: /!=$/,\n  replace: '\u2260',\n})\n\nexport const laquo = textInputRule({\n  find: /<<$/,\n  replace: '\u00AB',\n})\n\nexport const raquo = textInputRule({\n  find: />>$/,\n  replace: '\u00BB',\n})\n\nexport const multiplication = textInputRule({\n  find: /\\d+\\s?([*x])\\s?\\d+$/,\n  replace: '\u00D7',\n})\n\nexport const superscriptTwo = textInputRule({\n  find: /\\^2$/,\n  replace: '\u00B2',\n})\n\nexport const superscriptThree = textInputRule({\n  find: /\\^3$/,\n  replace: '\u00B3',\n})\n\nexport const oneQuarter = textInputRule({\n  find: /1\\/4$/,\n  replace: '\u00BC',\n})\n\nexport const threeQuarters = textInputRule({\n  find: /3\\/4$/,\n  replace: '\u00BE',\n})\n\nexport const Typography = Extension.create<TypographyOptions>({\n  name: 'typography',\n\n  addInputRules() {\n    const rules = []\n\n    if (this.options.emDash !== false) {\n      rules.push(emDash)\n    }\n\n    if (this.options.ellipsis !== false) {\n      rules.push(ellipsis)\n    }\n\n    if (this.options.openDoubleQuote !== false) {\n      rules.push(openDoubleQuote)\n    }\n\n    if (this.options.closeDoubleQuote !== false) {\n      rules.push(closeDoubleQuote)\n    }\n\n    if (this.options.openSingleQuote !== false) {\n      rules.push(openSingleQuote)\n    }\n\n    if (this.options.closeSingleQuote !== false) {\n      rules.push(closeSingleQuote)\n    }\n\n    if (this.options.leftArrow !== false) {\n      rules.push(leftArrow)\n    }\n\n    if (this.options.rightArrow !== false) {\n      rules.push(rightArrow)\n    }\n\n    if (this.options.copyright !== false) {\n      rules.push(copyright)\n    }\n\n    if (this.options.trademark !== false) {\n      rules.push(trademark)\n    }\n\n    if (this.options.registeredTrademark !== false) {\n      rules.push(registeredTrademark)\n    }\n\n    if (this.options.oneHalf !== false) {\n      rules.push(oneHalf)\n    }\n\n    if (this.options.plusMinus !== false) {\n      rules.push(plusMinus)\n    }\n\n    if (this.options.notEqual !== false) {\n      rules.push(notEqual)\n    }\n\n    if (this.options.laquo !== false) {\n      rules.push(laquo)\n    }\n\n    if (this.options.raquo !== false) {\n      rules.push(raquo)\n    }\n\n    if (this.options.multiplication !== false) {\n      rules.push(multiplication)\n    }\n\n    if (this.options.superscriptTwo !== false) {\n      rules.push(superscriptTwo)\n    }\n\n    if (this.options.superscriptThree !== false) {\n      rules.push(superscriptThree)\n    }\n\n    if (this.options.oneQuarter !== false) {\n      rules.push(oneQuarter)\n    }\n\n    if (this.options.threeQuarters !== false) {\n      rules.push(threeQuarters)\n    }\n\n    return rules\n  },\n})\n", "import d from \"./node_modules/@tiptap/extension-typography/dist/tiptap-extension-typography.esm.js\";export default d;\nexport * from \"./node_modules/@tiptap/extension-typography/dist/tiptap-extension-typography.esm.js\""],
  "mappings": "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",
  "names": []
}
