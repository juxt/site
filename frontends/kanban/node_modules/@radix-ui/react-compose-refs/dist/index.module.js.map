{"mappings":"+BAoBA,SAASA,eAAkBC,GACzB,OAAQC,GAAYD,EAAKE,SAASC,GAbpC,SAAmBA,EAAqBC,GACnB,mBAARD,EACTA,EAAIC,GACKD,MAAAA,IACRA,EAAkCE,QAAUD,GASLE,CAAOH,EAAKF,YAOxD,SAASM,mBAAsBP,GAE7B,OAAOQ,EAAMC,YAAYV,eAAeC,GAAOA","sources":["./packages/react/compose-refs/src/composeRefs.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n"],"names":["composeRefs","refs","node","forEach","ref","value","current","setRef","useComposedRefs","React","useCallback"],"version":3,"file":"index.module.js.map"}