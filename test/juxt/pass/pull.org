* GraphQL query

#+begin_src clojure
    {:xt/id "https://example.org/actions/get-trade"
     ::site/type "https://meta.juxt.site/pass/action"
     ::pass/in [currency]
     ::pass/pull [:amount :expiry :trader]
     ::pass/where [[trade :type "trade"] [trade :currency currency]]
     ::pass/rules [...]
  }

    {:xt/id "https://example.org/actions/get-trader-info"
     ::site/type "https://meta.juxt.site/pass/action"
     ::pass/pull [:firstname :employee-id]
     ::pass/rules [...]
  }

    {:xt/id "https://example.org/actions/get-trader-personal-info"
     ::site/type "https://meta.juxt.site/pass/action"
     ::pass/pull [:firstname :employee-id' :dietary-info]
     ::pass/rules [...]
  }

    {:xt/id "https://example.org/actions/get-trades-with-personal-info"
     ::site/type "https://meta.juxt.site/pass/action"
     ::pass/pull [:amount :expiry {:trader [:firstname :employee-id :dietary-info]}]
     ::pass/rules [...]

     }
#+end_src

A Risk Controller might have access to "https://example.org/actions/get-trades"
and "https://example.org/actions/get-trader-info" while an HR Manager might have
access to "https://example.org/actions/get-trader-personal-info"

#+begin_src graphql
  {
    allTrades(ccy: "USD" @site(:param "currency")) @site(action: ["https://example.org/actions/get-trades-with-personal-info" "https://example.org/actions/get-trades-with-info"]) {
      amount
      expiry
      trader {
        firstname
        employeeId
        dietaryInfo @site(action: ["https://example.org/actions/get-allergy-info"]) {
          allergies
        }
      }
    }
  }
#+end_src

This will compile to an XT query:


#+begin_src clojure
  '{:find [(pull resource [:amount :expiry {:trader [:firstname :employee-id :dietary-info]}])]

    :where [[action ::site/type "https://meta.juxt.site/pass/action"]
            [(contains? actions action)]

            [permission ::site/type "https://meta.juxt.site/pass/permission"]
            [permission ::pass/action action]

            (allowed? permission subject action resource)
            ]

    :in [subject actions]

    :rules [(allowed? permission subject action resource)
            [subject :identity identity]
            [identity :user user]
            [user :role "trader"]
            [permission :user user]
            ]

    }
#+end_src
