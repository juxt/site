{"version":3,"file":"create-styles.js","sources":["../../src/tss/create-styles.ts"],"sourcesContent":["import type { MantineTheme } from '../theme';\nimport type { CSSObject } from './types';\nimport { fromEntries } from './utils/from-entries/from-entries';\nimport { useCss } from './use-css';\nimport { useMantineTheme, useMantineThemeStyles } from '../theme/MantineProvider';\nimport { mergeClassNames } from './utils/merge-class-names/merge-class-names';\n\nexport interface UseStylesOptions<Key extends string> {\n  classNames?: Partial<Record<Key, string>>;\n  styles?:\n    | Partial<Record<Key, CSSObject>>\n    | ((theme: MantineTheme) => Partial<Record<Key, CSSObject>>);\n  name: string;\n}\n\nexport function createStyles<Key extends string = string, Params = void>(\n  getCssObjectOrCssObject:\n    | ((\n        theme: MantineTheme,\n        params: Params,\n        createRef: (refName: string) => string\n      ) => Record<Key, CSSObject>)\n    | Record<Key, CSSObject>\n) {\n  const getCssObject =\n    typeof getCssObjectOrCssObject === 'function'\n      ? getCssObjectOrCssObject\n      : () => getCssObjectOrCssObject;\n\n  function useStyles(params: Params, options?: UseStylesOptions<Key>) {\n    const theme = useMantineTheme();\n    const themeStyles = useMantineThemeStyles()[options?.name];\n\n    const { css, cx } = useCss();\n\n    let count = 0;\n\n    function createRef(refName: string) {\n      count += 1;\n      return `mantine-ref_${refName || ''}_${count}`;\n    }\n\n    const cssObject = getCssObject(theme, params, createRef);\n\n    const _styles =\n      typeof options?.styles === 'function' ? options?.styles(theme) : options?.styles || {};\n    const _themeStyles = typeof themeStyles === 'function' ? themeStyles(theme) : themeStyles || {};\n\n    const classes = fromEntries(\n      Object.keys(cssObject).map((key) => {\n        const mergedStyles = cx(css(cssObject[key]), css(_themeStyles[key]), css(_styles[key]));\n        return [key, mergedStyles];\n      })\n    ) as Record<Key, string>;\n\n    return { classes: mergeClassNames(cx, classes, options?.classNames, options?.name), cx, theme };\n  }\n\n  return useStyles;\n}\n"],"names":["useMantineTheme","useMantineThemeStyles","useCss","fromEntries","mergeClassNames"],"mappings":";;;;;;;;;AAIO,SAAS,YAAY,CAAC,uBAAuB,EAAE;AACtD,EAAE,MAAM,YAAY,GAAG,OAAO,uBAAuB,KAAK,UAAU,GAAG,uBAAuB,GAAG,MAAM,uBAAuB,CAAC;AAC/H,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE;AACtC,IAAI,MAAM,KAAK,GAAGA,+BAAe,EAAE,CAAC;AACpC,IAAI,MAAM,WAAW,GAAGC,qCAAqB,EAAE,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzF,IAAI,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,GAAGC,aAAM,EAAE,CAAC;AACjC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,SAAS,SAAS,CAAC,OAAO,EAAE;AAChC,MAAM,KAAK,IAAI,CAAC,CAAC;AACjB,MAAM,OAAO,CAAC,YAAY,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAC7D,IAAI,MAAM,OAAO,GAAG,QAAQ,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,UAAU,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC;AAC7L,IAAI,MAAM,YAAY,GAAG,OAAO,WAAW,KAAK,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,WAAW,IAAI,EAAE,CAAC;AACpG,IAAI,MAAM,OAAO,GAAGC,uBAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;AACpE,MAAM,MAAM,YAAY,GAAG,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9F,MAAM,OAAO,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AACjC,KAAK,CAAC,CAAC,CAAC;AACR,IAAI,OAAO,EAAE,OAAO,EAAEC,+BAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,UAAU,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC;AACxJ,GAAG;AACH,EAAE,OAAO,SAAS,CAAC;AACnB;;;;"}